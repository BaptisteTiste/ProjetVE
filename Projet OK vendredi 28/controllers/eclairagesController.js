const db = require('../db');

// ‚ûï Ajouter un √©clairage (coordonn√©es facultatives)
exports.ajouterEclairage = async (req, res) => {
  const { Id_Salle, Id_Eclair_Salle, PosX, PosY, PosZ, etat } = req.body;

  console.log('‚û°Ô∏è Donn√©es re√ßues :', req.body);

  if (!Id_Salle || !Id_Eclair_Salle || PosX === undefined || PosY === undefined || PosZ === undefined) {
    return res.status(400).json({ error: 'Tous les champs doivent √™tre fournis, y compris les coordonn√©es.' });
  }
  

  // V√©rifie seulement les champs obligatoires
  if (!Id_Salle || !Id_Eclair_Salle) {
    return res.status(400).json({ error: 'Id_Salle et Id_Eclair_Salle sont obligatoires.' });
  }

  const sql = `
    INSERT INTO eclairages (Id_Salle, Id_Eclair_Salle, PosX, PosY, PosZ, etat)
    VALUES (?, ?, ?, ?, ?, ?)
  `;

  try {
    const [result] = await db.promise().execute(sql, [
      Id_Salle,
      Id_Eclair_Salle,
      PosX || null,
      PosY || null,
      PosZ || null,
      etat || 'bon'
    ]);

    res.status(201).json({
      message: '√âclairage ajout√© avec succ√®s.',
      id: result.insertId
    });
  } catch (err) {
    console.error('‚ùå Erreur lors de l\'insertion de l\'√©clairage :', err);
    res.status(500).json({ error: 'Erreur lors de l\'insertion de l\'√©clairage.' });
  }
}
// üìÑ Lister tous les √©clairages
exports.listerEclairages = async (req, res) => {
    try {
      const [rows] = await db.promise().query('SELECT * FROM eclairages');
      res.json(rows);
    } catch (err) {
      console.error('Erreur lors de la r√©cup√©ration des √©clairages :', err);
      res.status(500).json({ error: 'Erreur lors de la r√©cup√©ration des √©clairages.' });
    }
  };
  
  // üîß Modifier l'√©tat d'un √©clairage
  exports.mettreAJourEtat = async (req, res) => {
    const idEclairage = req.params.id;
    const { etat } = req.body;
  
    if (!etat || (etat !== 'bon' && etat !== 'defectueux')) {
      return res.status(400).json({ error: "L'√©tat doit √™tre 'bon' ou 'defectueux'." });
    }
  
    try {
      const [result] = await db.promise().execute(
        'UPDATE eclairages SET etat = ? WHERE id = ?',
        [etat, idEclairage]
      );
  
      if (result.affectedRows === 0) {
        return res.status(404).json({ error: "√âclairage non trouv√©." });
      }
  
      res.json({ message: "√âtat de l'√©clairage mis √† jour." });
    } catch (err) {
      console.error('Erreur lors de la mise √† jour de l\'√©clairage :', err);
      res.status(500).json({ error: "Erreur serveur lors de la mise √† jour." });
    }
  };

  // üóëÔ∏è Supprimer un √©clairage
exports.supprimerEclairage = async (req, res) => {
    const id = req.params.id;
    try {
      const [result] = await db.promise().execute('DELETE FROM eclairages WHERE id = ?', [id]);
      if (result.affectedRows === 0) {
        return res.status(404).json({ error: "√âclairage non trouv√©." });
      }
      res.status(200).json({ message: "√âclairage supprim√©." });
    } catch (err) {
      console.error('Erreur lors de la suppression de l\'√©clairage :', err);
      res.status(500).json({ error: "Erreur lors de la suppression." });
    }
  };  
  
  
;
